% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/source_EM.R
\name{star_EM}
\alias{star_EM}
\title{EM Algorithm for STAR}
\usage{
star_EM(y, estimator, transformation = "log", lambda = NULL,
  y_max = Inf, sd_init = 10, tol = 10^-10, max_iters = 1000)
}
\arguments{
\item{y}{\code{n x 1} vector of observed counts}

\item{estimator}{a function that inputs data \code{y} and outputs a list with two elements:
\enumerate{
\item The fitted values \code{fitted.values}
\item The parameter estimates \code{coefficients}
}}

\item{transformation}{transformation to use for the latent process; must be one of
\itemize{
\item "identity" (identity transformation)
\item "log" (log transformation)
\item "sqrt" (square root transformation)
\item "box-cox" (box-cox transformation)
}}

\item{lambda}{the nonlinear parameter for the Box-Cox transformation; otherwise ignored}

\item{y_max}{a fixed and known upper bound for all observations; default is \code{Inf}}

\item{sd_init}{add random noise for initialization scaled by \code{sd_init}
times the Gaussian MLE standard deviation}

\item{tol}{tolerance for stopping the EM algorithm; default is 10^-10;}

\item{max_iters}{maximum number of EM iterations before stopping; default is 1000}
}
\value{
a list with the following elements:
\itemize{
\item \code{coefficients} the MLEs of the coefficients
\item \code{fitted.values} the fitted values at the MLEs
\item \code{sigma.hat} the MLE of the standard deviation
\item \code{mu.hat} the MLE of the conditional mean (on the transformed scale)
\item \code{z.hat} the estimated latent variables (on the transformed scale) at the MLEs
\item \code{residuals} the Dunn-Smyth residuals
\item \code{logLik} the log-likelihood at the MLEs
\item \code{logLik0} the log-likelihood at the MLEs for the *unrounded* initialization
\item and other parameters that
(i) track the parameters across EM iterations and
(ii) record the model specifications
}
}
\description{
Compute the MLEs and log-likelihood for the STAR model. The STAR model requires
a transformation (such as log, sqrt, or Box-Cox) and a function to produce an
estimator of the conditional mean given observed data. All least squares estimators
(including nonlinear models) are valid within this framework. Standard function calls
including \code{coefficients()}, \code{fitted()}, and \code{residuals()} apply.
}
\note{
For the Box-Cox transformation, a \code{NULL} value of
\code{lambda} requires estimation of \code{lambda}. The maximum likelihood
estimator is computed over a grid of values within the EM algorithm.

Infinite latent data values may occur when the transformed
Gaussian model is highly inadequate. In that case, the function returns
the *indices* of the data points with infinite latent values, which are
significant outliers under the model. Deletion of these indices and
re-running the model is one option, but care must be taken to ensure
that (i) it is appropriate to treat these observations as outliers and
(ii) the model is adequate for the remaining data points.
}
\examples{
# Simulate data with count-valued response y:
sim_dat = simulate_nb_lm(n = 100, p = 2)
y = sim_dat$y; X = sim_dat$X

# EM algorithm for STAR (using the log-link)
fit_em = star_EM(y = y,
                 estimator = function(y) lm(y ~ X - 1),
                 transformation = 'log')

# Fitted coefficients:
coef(fit_em)

# Fitted values:
y_hat = fitted(fit_em)
plot(y_hat, y);

# Residuals:
plot(residuals(fit_em))
qqnorm(residuals(fit_em)); qqline(residuals(fit_em))

# Log-likelihood at MLEs:
fit_em$logLik

# p-value for the slope (likelihood ratio test):
fit_em_0 = star_EM(y = y,
                   estimator = function(y) lm(y ~ 1), # no x-variable
                   transformation = 'log')
pchisq(-2*(fit_em_0$logLik - fit_em$logLik),
       df = 1, lower.tail = FALSE)

}
