% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/STAR_frequentist.R
\name{predict.lmstar}
\alias{predict.lmstar}
\title{Compute a predictive distribution for the integer-valued response in STAR linear model}
\usage{
\method{predict}{lmstar}(object, newdata = NULL, N = 1000)
}
\arguments{
\item{object}{Object of class "lmstar" as output by \code{\link{lm_star}}}

\item{newdata}{An optional \code{m x p} matrix with out-of-sample predictors. If omitted, the fitted values are used.}

\item{N}{number of Monte Carlo samples from the posterior predictive distribution; default is 1000}
}
\value{
\code{N x m} samples from the posterior predictive distribution
at the \code{m} test points
}
\description{
A Monte Carlo approach for estimating the (plug-in) predictive distribution for the STAR
linear model. The algorithm iteratively samples (i) the latent data given the observed
data, (ii) the latent predictive data given the latent data from (i), and
(iii) (inverse) transforms and rounds the latent predictive data to obtain a
draw from the integer-valued predictive distribution.
}
\note{
The ``plug-in" predictive distribution is a crude approximation. Better
approaches are available using the Bayesian models, which provide samples
from the posterior predictive distribution.
}
\examples{
# Simulate data with count-valued response y:
x = seq(0, 1, length.out = 100)
y = rpois(n = length(x), lambda = exp(1.5 + 5*(x -.5)^2))

# Estimate model--assume a quadratic effect (better for illustration purposes)
fit = lm_star(y~x+I(x^2), transformation = 'sqrt')

#Compute the predictive draws for the test points (same as observed points here)
y_pred = predict(fit)

# Using these draws, compute prediction intervals for STAR:
PI_y = t(apply(y_pred, 2, quantile, c(0.05, 1 - 0.05)))

# Plot the results: PIs and CIs
plot(x, y, ylim = range(y, PI_y), main = 'STAR: 90\% Prediction Intervals')
lines(x, PI_y[,1], col='darkgray', type='s', lwd=4);
lines(x, PI_y[,2], col='darkgray', type='s', lwd=4)
}
